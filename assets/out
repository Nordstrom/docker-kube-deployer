#!/bin/bash
set -e
set -o pipefail
exec 3>&1 # use fd 3 for script output
exec 1>&2 # send normal stdout to stderr for logging
payload=$(mktemp $TMPDIR/kubernetes-resource-request.XXXXXX)
cat > $payload <&0

TOKEN=$(jq -r .source.token < $payload)
KUBE_URL=$(jq -r .source.kube_url < $payload)
jq -r .source.ca_cert < $payload > /tmp/ca.pem

kubectl config set-cluster ci --server=$KUBE_URL --certificate-authority=/tmp/ca.pem --embed-certs
kubectl config set-credentials ci --token=$TOKEN
kubectl config set-context ci --cluster=ci --user=ci
kubectl config use-context ci


MANIFEST_DIR=$(jq -r .params.manifest_dir < $payload)
NAMESPACE=$(jq -r .params.namespace < $payload)
RESOURCE=$(jq -r .params.resource < $payload)

kubectl apply -f $1/$MANIFEST_DIR --namespace=$NAMESPACE
kubectl rollout status --namespace=$NAMESPACE $RESOURCE

jq -n "{
  version: { someversion: \"version\" },
  metadata: [
    { name: \"commit\", value: \"sha\" },
    { name: \"author\", value: \"Team Member\" }
  ]
}" >&3
